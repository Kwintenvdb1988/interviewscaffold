steps:
  # Create Artifact Registry repository if it doesn't exist
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'artifacts'
      - 'repositories'
      - 'create'
      - 'interviewscaffold'
      - '--repository-format=docker'
      - '--location=europe-west1'
      - '--description=Interview Scaffold Docker Repository'
    allowFailure: true  # Don't fail if repository already exists
  
  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'europe-west1-docker.pkg.dev/$PROJECT_ID/interviewscaffold/app', '.']
  
  # Push the image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'europe-west1-docker.pkg.dev/$PROJECT_ID/interviewscaffold/app']
  
  # Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'interviewscaffold'
      - '--image'
      - 'europe-west1-docker.pkg.dev/$PROJECT_ID/interviewscaffold/app'
      - '--region'
      - 'europe-west1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '8080'
      - '--memory'
      - '512Mi'
      - '--cpu'
      - '1'
      - '--max-instances'
      - '10'
      - '--min-instances'
      - '0'
      - '--set-env-vars'
      - 'SPRING_PROFILES_ACTIVE=docker'
  
  # Ensure the service is publicly accessible
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'services'
      - 'add-iam-policy-binding'
      - 'interviewscaffold'
      - '--region=europe-west1'
      - '--member=allUsers'
      - '--role=roles/run.invoker'

# Store the built image in Artifact Registry
images:
  - 'europe-west1-docker.pkg.dev/$PROJECT_ID/interviewscaffold/app'

# Build timeout (optional)
timeout: '1200s'

# Logging configuration
options:
  logging: CLOUD_LOGGING_ONLY 